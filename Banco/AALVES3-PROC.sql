USE AALVES3
GO

--LOGIN C# E JAVA
CREATE PROCEDURE USP_PROG_LOGIN
	@EMAIL VARCHAR(80),
	@SENHA VARCHAR(80)
AS
	DECLARE @VAL_EMAIL INT, @VAL_SENHA INT

	SET @VAL_EMAIL = (SELECT COUNT(ID_PROFESSOR) FROM PROFESSOR WHERE EMAIL = @EMAIL)
	SET @VAL_SENHA = (SELECT COUNT(SENHA) FROM PROFESSOR WHERE SENHA = @SENHA)
	IF ((@VAL_EMAIL = 1) AND (@VAL_SENHA = 1))
		BEGIN
			SELECT ID_PROFESSOR AS ID, NOME, ('PROFESSOR') AS CARGO FROM PROFESSOR
		END
	ELSE
		BEGIN 
			SET @VAL_EMAIL = (SELECT COUNT(ID_FUNCIONARIO) FROM FUNCIONARIO WHERE EMAIL = @EMAIL)
			SET @VAL_SENHA = (SELECT COUNT(SENHA) FROM FUNCIONARIO WHERE SENHA = @SENHA)

			IF ((@VAL_EMAIL = 1) AND (@VAL_SENHA = 1))
				BEGIN
					SELECT FUNCIONARIO.ID_FUNCIONARIO AS ID, FUNCIONARIO.NOME, CARGO.NOME AS CARGO FROM FUNCIONARIO
					INNER JOIN CARGO ON FUNCIONARIO.CARGO = CARGO.ID_CARGO
				END
			ELSE
				BEGIN 
					SELECT 0 AS ID, ('') AS NOME, ('') AS CARGO
				END
		END

--EXEC USP_PROG_LOGIN "testet", "teste"

GO

--LOGIN ASP
CREATE PROCEDURE USP_ASP_LOGIN
	@EMAIL VARCHAR(80),
	@SENHA VARCHAR(80)
AS
	DECLARE @VAL_EMAIL INT, @VAL_SENHA INT

	SET @VAL_EMAIL = (SELECT COUNT(ID_ALUNO) FROM ALUNO WHERE EMAIL = @EMAIL)
	SET @VAL_SENHA = (SELECT COUNT(SENHA) FROM ALUNO WHERE SENHA = @SENHA)
	IF ((@VAL_EMAIL = 1) AND (@VAL_SENHA = 1))
		BEGIN
			SELECT ID_ALUNO AS ID, NOME FROM ALUNO
		END
	ELSE
		BEGIN 
			SELECT 0 AS ID, ('') AS NOME
		END
--EXEC USP_ASP_LOGIN "joaoCM@gmail.com", "12345"




--PROCEDURES C#
--#########################################################

--ALUNO
--|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
GO
CREATE PROCEDURE USP_ALUNO_INSERIR
	@NOME     VARCHAR(50),
	@EMAIL    VARCHAR(50),
	@SEXO     VARCHAR(20),
	@SENHA    VARCHAR(80),
	@RUA      VARCHAR(80),
	@NUM      INT,
	@CEP      VARCHAR(9),
	@CIDADE   VARCHAR(80),
	@ESTADO   VARCHAR(30),
	@TELEFONE VARCHAR(20),
	@ATIVO    BIT
AS
	DECLARE @QNT INT
	
	SET @QNT = (SELECT COUNT(ID_ALUNO) FROM ALUNO WHERE NOME = @NOME)
	
	IF (@QNT > 0)
		BEGIN
			SELECT 0
		END
	ELSE
		BEGIN
			INSERT INTO ALUNO OUTPUT inserted.ID_ALUNO VALUES (@NOME, @EMAIL, @SEXO, @SENHA, @RUA, @NUM, @CEP, @CIDADE, @ESTADO, @TELEFONE, DEFAULT, @ATIVO)
		END
		
--EXEC USP_ALUNO_INSERIR "TESTE", "TESTE@teste.com", "TESTE", "TESTE", "TESTE", "10", "11111111", "TESTE", "TESTE", "111111111", "1"
GO

CREATE PROCEDURE USP_CURSO_ALUNO_INSERIR
	@ID_ALUNO INT,
	@ID_CURSO INT
AS
	DECLARE @QNT INT
	
	SET @QNT = (SELECT COUNT(ID_ALUNO) FROM CURSO_ALUNO WHERE ID_ALUNO = @ID_ALUNO AND ID_CURSO = @ID_CURSO)
	
	IF (@QNT > 0)
		BEGIN
			SELECT 0
		END
	ELSE
		BEGIN
			UPDATE CURSO_ALUNO SET CURSO_ALUNO.ATIVO = 0 WHERE ID_ALUNO = @ID_ALUNO;
			INSERT CURSO_ALUNO VALUES(@ID_ALUNO, @ID_CURSO, DEFAULT, 1);
			SELECT 1
		END
		
--EXEC USP_CURSO_ALUNO_INSERIR "1", "3"
GO

CREATE PROCEDURE USP_CURSO_ALUNO_CONSULTAR
	@ID_ALUNO INT
AS
	SELECT * FROM CURSO_ALUNO WHERE ID_ALUNO = @ID_ALUNO AND ATIVO = 1

GO

CREATE PROCEDURE USP_PERIODO_ALUNO_INSERIR
	@ID_ALUNO   INT,
	@ID_PERIODO INT
AS
	DECLARE @QNT INT
	
	SET @QNT = (SELECT COUNT(ID_ALUNO) FROM PERIODO_ALUNO WHERE ID_ALUNO = @ID_ALUNO AND ID_PERIODO = @ID_PERIODO)
	
	IF (@QNT > 0)
		BEGIN
			SELECT 0
		END
	ELSE
		BEGIN
			UPDATE PERIODO_ALUNO SET PERIODO_ALUNO.ATIVO = 0 WHERE ID_ALUNO = @ID_ALUNO;
			INSERT PERIODO_ALUNO VALUES(@ID_ALUNO, @ID_PERIODO, DEFAULT, 1);
			SELECT 1
		END
		
--EXEC USP_PERIODO_ALUNO_INSERIR "1", "3"
GO

CREATE PROCEDURE USP_ALUNO_CONSULTAR_ID
	@ID INT
AS
	SELECT * FROM ALUNO WHERE ID_ALUNO = @ID AND ATIVO = 1
--EXEC USP_ALUNO_CONSULTAR_ID "1"
GO

CREATE PROCEDURE USP_ALUNO_CONSULTAR_TIPO
	@TIPO  INT,
	@ATIVO INT
AS
	IF(@TIPO = 1)
		BEGIN
			SELECT ALUNO.ID_ALUNO AS ID, ALUNO.NOME, ALUNO.SEXO, CURSO.NOME AS CURSO, PERIODO.NOME AS PERIODO FROM ALUNO 
			INNER JOIN CURSO_ALUNO ON
			ALUNO.ID_ALUNO = CURSO_ALUNO.ID_ALUNO
			INNER JOIN CURSO ON
			CURSO_ALUNO.ID_CURSO = CURSO.ID_CURSO
			INNER JOIN PERIODO_ALUNO ON
			ALUNO.ID_ALUNO = PERIODO_ALUNO.ID_ALUNO
			INNER JOIN PERIODO ON
			PERIODO_ALUNO.ID_PERIODO = PERIODO.ID_PERIODO
			WHERE ALUNO.ATIVO = @ATIVO AND CURSO_ALUNO.ATIVO = @ATIVO AND PERIODO_ALUNO.ATIVO = @ATIVO
			ORDER BY ALUNO.ID_ALUNO ASC
		END
	ELSE IF(@TIPO = 2)
		BEGIN
			SELECT ID_ALUNO AS ID, NOME, EMAIL, TELEFONE FROM ALUNO WHERE ALUNO.ATIVO = @ATIVO
		END
	ELSE IF(@TIPO = 3)
		BEGIN
			SELECT ID_ALUNO AS ID, NOME, RUA, NUM, CEP, CIDADE, ESTADO FROM ALUNO WHERE ALUNO.ATIVO = @ATIVO
		END
--EXEC USP_ALUNO_CONSULTAR_TIPO "1", "1"
GO

--FRGSDFGDFG
--SDFGSDFSDF
--SDFSDFSDFFS
--FRGSDFGDFG
--SDFGSDFSDF
--SDFSDFSDFFS
--FRGSDFGDFG
--SDFGSDFSDF
--SDFSDFSDFFS
CREATE PROCEDURE USP_ALUNO_CONSULTAR_ESPECIFICO
	@TIPO  INT,
	@ATIVO BIT,
	@CAMPO VARCHAR(30),
	@VALOR VARCHAR(50)
AS
	DECLARE @QUERY VARCHAR(500)
	IF(@TIPO = 1)
		BEGIN
			IF(@CAMPO = 'CURSO')
				BEGIN
					SELECT ALUNO.ID_ALUNO AS ID, ALUNO.NOME, ALUNO.SEXO, CURSO.NOME AS CURSO, PERIODO.NOME AS PERIODO FROM ALUNO
					INNER JOIN CURSO_ALUNO ON
					ALUNO.ID_ALUNO = CURSO_ALUNO.ID_ALUNO
					INNER JOIN CURSO ON
					CURSO_ALUNO.ID_CURSO = CURSO.ID_CURSO
					INNER JOIN PERIODO_ALUNO ON
					ALUNO.ID_ALUNO = PERIODO_ALUNO.ID_ALUNO
					INNER JOIN PERIODO ON
					PERIODO_ALUNO.ID_PERIODO = PERIODO.ID_PERIODO WHERE CURSO.NOME LIKE @VALOR AND ALUNO.ATIVO = @ATIVO AND CURSO_ALUNO.ATIVO = @ATIVO AND PERIODO_ALUNO.ATIVO = @ATIVO
				END
			ELSE IF(@CAMPO = 'PERIODO')
				BEGIN
					SELECT ALUNO.ID_ALUNO AS ID, ALUNO.NOME, ALUNO.SEXO, CURSO.NOME AS CURSO, PERIODO.NOME AS PERIODO FROM ALUNO
					INNER JOIN CURSO_ALUNO ON
					ALUNO.ID_ALUNO = CURSO_ALUNO.ID_ALUNO
					INNER JOIN CURSO ON
					CURSO_ALUNO.ID_CURSO = CURSO.ID_CURSO
					INNER JOIN PERIODO_ALUNO ON
					ALUNO.ID_ALUNO = PERIODO_ALUNO.ID_ALUNO
					INNER JOIN PERIODO ON
					PERIODO_ALUNO.ID_PERIODO = PERIODO.ID_PERIODO WHERE PERIODO.NOME LIKE @VALOR AND ALUNO.ATIVO = @ATIVO AND CURSO_ALUNO.ATIVO = @ATIVO AND PERIODO_ALUNO.ATIVO = @ATIVO
				END
			ELSE 
				BEGIN
					SET @QUERY = 'SELECT ALUNO.ID_ALUNO AS ID, ALUNO.NOME, ALUNO.SEXO, CURSO.NOME AS CURSO, PERIODO.NOME AS PERIODO FROM ALUNO
					INNER JOIN CURSO_ALUNO ON
					ALUNO.ID_ALUNO = CURSO_ALUNO.ID_ALUNO
					INNER JOIN CURSO ON
					CURSO_ALUNO.ID_CURSO = CURSO.ID_CURSO
					INNER JOIN PERIODO_ALUNO ON
					ALUNO.ID_ALUNO = PERIODO_ALUNO.ID_ALUNO
					INNER JOIN PERIODO ON
					PERIODO_ALUNO.ID_PERIODO = PERIODO.ID_PERIODO WHERE ALUNO.' + @CAMPO + ' LIKE ''' + @VALOR + '''AND ALUNO.ATIVO = @ATIVO AND CURSO_ALUNO.ATIVO = @ATIVO AND PERIODO_ALUNO.ATIVO = @ATIVO';
					EXEC (@QUERY)
				END
		END
	ELSE IF(@TIPO = 2)
		BEGIN
		--ESSA COISA NAO FUNCIONA COM CAMPOS NAO DEFINIDOS
			--DECLARE @QUERY NVARCHAR(500);
			SET @QUERY = 'SELECT ID_ALUNO AS ID, NOME, EMAIL, TELEFONE FROM ALUNO WHERE ' + @CAMPO + ' LIKE ''' + @VALOR + ''' AND ALUNO.ATIVO = @ATIVO';
			SELECT @QUERY
			EXEC (@QUERY)
		END
	ELSE IF(@TIPO = 3)
		BEGIN
			SET @QUERY = 'SELECT ID_ALUNO AS ID, NOME, RUA, NUM, CEP, CIDADE, ESTADO FROM ALUNO WHERE ' + @CAMPO + ' LIKE ''' + @VALOR + ''' AND ALUNO.ATIVO = @ATIVO';
			EXEC (@QUERY)
		END
--EXEC USP_ALUNO_CONSULTAR_ESPECIFICO "1", "NOME", "J"

GO
--FUNCION�RIO
--||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
CREATE PROCEDURE USP_FUNC_INSERIR
	@NOME     VARCHAR(80),
	@SEXO     VARCHAR(20),
	@RG       VARCHAR(50),
	@CPF      VARCHAR(50),
	@RUA      VARCHAR(80),
	@NUM      INT,
	@BAIRRO   VARCHAR(20),
	@CEP      VARCHAR(9),
	@CIDADE   VARCHAR(80),
	@ESTADO   VARCHAR(30),
	@TELEFONE VARCHAR(20),
	@CELULAR  VARCHAR(20),
	@EMAIL    VARCHAR(80),
	@SENHA    VARCHAR(80),
	@CARGO    INT,
	@ATIVO    BIT
AS
	DECLARE @QNT INT
	
	SET @QNT = (SELECT COUNT(ID_FUNCIONARIO) FROM FUNCIONARIO WHERE CPF = @CPF)
	
	IF (@QNT > 0)
		BEGIN
			SELECT 0
		END
	ELSE
		BEGIN
			INSERT INTO FUNCIONARIO VALUES (@NOME, @SEXO, @RG, @CPF, @RUA, @NUM, @BAIRRO, @CEP, @CIDADE, @ESTADO, @TELEFONE, @CELULAR, @EMAIL, @SENHA, @CARGO, DEFAULT, @ATIVO);
			SELECT 1
		END
--EXEC USP_FUNC_INSERIR "TESTE", "TESTE", "TESTE", "TESTE", "TESTE", "111", "EEEE", "TESTE", "TESTE", "111111111", "EEEEE1", "TESTE", "TESTE", "TESTE", "1", "1"
GO


--PROFESSOR
--|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
CREATE PROCEDURE USP_PROF_INSERIR
	@NOME     VARCHAR(80),
	@SEXO     VARCHAR(20),
	@RG       VARCHAR(50),
	@CPF      VARCHAR(50),
	@RUA      VARCHAR(80),
	@NUM      INT,
	@BAIRRO   VARCHAR(20),
	@CEP      VARCHAR(9),
	@CIDADE   VARCHAR(80),
	@ESTADO   VARCHAR(30),
	@TELEFONE VARCHAR(20),
	@CELULAR  VARCHAR(20),
	@EMAIL    VARCHAR(80),
	@SENHA    VARCHAR(80),
	@ATIVO    BIT
AS
	DECLARE @QNT INT
	
	SET @QNT = (SELECT COUNT(ID_PROFESSOR) FROM PROFESSOR WHERE CPF = @CPF)
	
	IF (@QNT > 0)
		BEGIN
			SELECT 0
		END
	ELSE
		BEGIN
			INSERT INTO PROFESSOR VALUES (@NOME, @SEXO, @RG, @CPF, @RUA, @NUM, @BAIRRO, @CEP, @CIDADE, @ESTADO, @TELEFONE, @CELULAR, @EMAIL, @SENHA, DEFAULT, @ATIVO);
			SELECT 1
		END
--EXEC USP_PROF_INSERIR "TESTE", "TESTE", "TESTE", "TESTE", "TESTE", "111", "EEEE", "TESTE", "TESTE", "111111111", "EEEEE1", "TESTE", "TESTE", "TESTE", "1"
GO

--PRODUTOS_VENDAS
CREATE PROCEDURE USP_PRODUTOS_VENDAS_REPORT
AS
	SELECT DISTINCT PRODUTO.ID_PROD, PRODUTO.NOME_PROD, SUM(PEDIDO.VALOR) AS VALOR, SUM(PEDIDO.QUANT) AS QUANTIDADE FROM PEDIDO 
	INNER JOIN PRODUTO ON 
	PEDIDO.ID_PROD = PRODUTO.ID_PROD
	GROUP BY PRODUTO.ID_PROD, PRODUTO.NOME_PROD
GO
--EXEC USP_PRODUTOS_VENDAS_REPORT


--PROCEDURES ASP
--ALTERAR SENHA

CREATE PROCEDURE USP_ALUNO_ALT_SENHA
	@ID_ALUNO    INT,
	@SENHA_ATUAL VARCHAR(80),
	@SENHA_NOVA  VARCHAR(80)
AS
	DECLARE @QNT INT
	
	SET @QNT = (SELECT COUNT(ID_ALUNO) FROM ALUNO WHERE ID_ALUNO = @ID_ALUNO AND SENHA = @SENHA_ATUAL)
	
	IF(@QNT = 1)
		BEGIN
			UPDATE ALUNO SET SENHA = @SENHA_NOVA WHERE ID_ALUNO = @ID_ALUNO;
			SELECT ('Senha alterada com sucesso')
		END
	ELSE
		BEGIN
			SELECT ('A senha atual não confere!')
		END
--EXEC USP_ALUNO_ALT_SENHA "1", "TESTE", "abc"